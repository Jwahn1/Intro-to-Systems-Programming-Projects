
max3.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <max3>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d ec             	mov    %edi,-0x14(%rbp)
   7:	89 75 e8             	mov    %esi,-0x18(%rbp)
   a:	89 55 e4             	mov    %edx,-0x1c(%rbp)
   d:	8b 45 ec             	mov    -0x14(%rbp),%eax
                                // if a > b
  10:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  13:	7e 10                	jle    25 <max3+0x25>
  15:	8b 45 ec             	mov    -0x14(%rbp),%eax
                                // a > c
  18:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  1b:	7e 08                	jle    25 <max3+0x25>
                                // result = a
  1d:	8b 45 ec             	mov    -0x14(%rbp),%eax
  20:	89 45 fc             	mov    %eax,-0x4(%rbp)
  23:	eb 1e                	jmp    43 <max3+0x43>
                                // if b > a
  25:	8b 45 e8             	mov    -0x18(%rbp),%eax
  28:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  2b:	7e 10                	jle    3d <max3+0x3d>
                                // if b > c
  2d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  30:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  33:	7e 08                	jle    3d <max3+0x3d>
                                // result = b
  35:	8b 45 e8             	mov    -0x18(%rbp),%eax
  38:	89 45 fc             	mov    %eax,-0x4(%rbp)
  3b:	eb 06                	jmp    43 <max3+0x43>
                                // result = c
  3d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40:	89 45 fc             	mov    %eax,-0x4(%rbp)
                                // return result
  43:	8b 45 fc             	mov    -0x4(%rbp),%eax
  46:	5d                   	pop    %rbp
  47:	c3                   	retq   
